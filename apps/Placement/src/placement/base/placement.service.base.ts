/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Placement as PrismaPlacement } from "@prisma/client";

export class PlacementServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlacementCountArgs, "select">
  ): Promise<number> {
    return this.prisma.placement.count(args);
  }

  async placements(
    args: Prisma.PlacementFindManyArgs
  ): Promise<PrismaPlacement[]> {
    return this.prisma.placement.findMany(args);
  }
  async placement(
    args: Prisma.PlacementFindUniqueArgs
  ): Promise<PrismaPlacement | null> {
    return this.prisma.placement.findUnique(args);
  }
  async createPlacement(
    args: Prisma.PlacementCreateArgs
  ): Promise<PrismaPlacement> {
    return this.prisma.placement.create(args);
  }
  async updatePlacement(
    args: Prisma.PlacementUpdateArgs
  ): Promise<PrismaPlacement> {
    return this.prisma.placement.update(args);
  }
  async deletePlacement(
    args: Prisma.PlacementDeleteArgs
  ): Promise<PrismaPlacement> {
    return this.prisma.placement.delete(args);
  }
}
